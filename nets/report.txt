TensorFlow 2.0 Upgrade Script
-----------------------------
Converted 4 files
Detected 13 issues that require attention
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
File: .\L_Resnet_E_IR.py
--------------------------------------------------------------------------------
.\L_Resnet_E_IR.py:91:12: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
.\L_Resnet_E_IR.py:108:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
.\L_Resnet_E_IR.py:109:22: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
.\L_Resnet_E_IR.py:110:13: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
.\L_Resnet_E_IR.py:111:12: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
.\L_Resnet_E_IR.py:126:8: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
.\L_Resnet_E_IR.py:128:16: WARNING: (Manual check required) upgrading tf.nn.convolution may require renaming or removing call arguments, but it was passed variable-length *args or **kwargs. The upgrade script cannot handle these automatically.
.\L_Resnet_E_IR.py:132:21: WARNING: (Manual check required) upgrading tf.nn.convolution may require renaming or removing call arguments, but it was passed variable-length *args or **kwargs. The upgrade script cannot handle these automatically.
.\L_Resnet_E_IR.py:137:12: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
.\L_Resnet_E_IR.py:253:12: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------
File: .\MobileFaceNet.py
--------------------------------------------------------------------------------
.\MobileFaceNet.py:40:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
.\MobileFaceNet.py:269:13: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
--------------------------------------------------------------------------------
File: .\mtcnn_model.py
--------------------------------------------------------------------------------
.\mtcnn_model.py:9:13: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
================================================================================
Detailed log follows:

================================================================================
================================================================================
Input tree: '.'
================================================================================
--------------------------------------------------------------------------------
Processing file '.\\L_Resnet_E_IR.py'
 outputting to '.\\L_Resnet_E_IR.py'
--------------------------------------------------------------------------------

91:12: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
91:12: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
108:18: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
108:18: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
108:59: INFO: tf.zeros_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
108:59: INFO: Renamed 'tf.zeros_initializer' to 'tf.compat.v1.zeros_initializer'
109:22: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
109:22: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
109:63: INFO: tf.ones_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
109:63: INFO: Renamed 'tf.ones_initializer' to 'tf.compat.v1.ones_initializer'
110:13: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
110:13: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
110:54: INFO: tf.zeros_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
110:54: INFO: Renamed 'tf.zeros_initializer' to 'tf.compat.v1.zeros_initializer'
111:12: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
111:12: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
111:53: INFO: tf.ones_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
111:53: INFO: Renamed 'tf.ones_initializer' to 'tf.compat.v1.ones_initializer'
116:4: INFO: Renamed 'tf.add_to_collection' to 'tf.compat.v1.add_to_collection'
117:4: INFO: Renamed 'tf.add_to_collection' to 'tf.compat.v1.add_to_collection'
126:8: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
126:8: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
126:36: INFO: Renamed 'tf.truncated_normal' to 'tf.random.truncated_normal'
128:16: INFO: Added keywords to args of function 'tf.nn.convolution'
128:16: WARNING: (Manual check required) upgrading tf.nn.convolution may require renaming or removing call arguments, but it was passed variable-length *args or **kwargs. The upgrade script cannot handle these automatically.
128:16: INFO: Renamed keyword argument for tf.nn.convolution from filter to filters
132:21: INFO: Added keywords to args of function 'tf.nn.convolution'
132:21: WARNING: (Manual check required) upgrading tf.nn.convolution may require renaming or removing call arguments, but it was passed variable-length *args or **kwargs. The upgrade script cannot handle these automatically.
132:21: INFO: Renamed keyword argument for tf.nn.convolution from filter to filters
137:12: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
137:12: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
137:40: INFO: Renamed 'tf.truncated_normal' to 'tf.random.truncated_normal'
167:9: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
182:18: INFO: Renamed 'tf.layers.dense' to 'tf.compat.v1.layers.dense'
240:13: INFO: Renamed 'tf.Session' to 'tf.compat.v1.Session'
241:20: INFO: Renamed 'tf.placeholder' to 'tf.compat.v1.placeholder'
242:36: INFO: Renamed 'tf.placeholder_with_default' to 'tf.compat.v1.placeholder_with_default'
243:28: INFO: Changing tf.contrib.layers xavier initializer to a tf.compat.v1.keras.initializers.VarianceScaling and converting arguments.

248:20: INFO: Renamed 'tf.train.Saver' to 'tf.compat.v1.train.Saver'
248:35: INFO: Renamed 'tf.trainable_variables' to 'tf.compat.v1.trainable_variables'
253:12: WARNING: *.save requires manual check. (This warning is only applicable if the code saves a tf.Keras model) Keras model.save now saves to the Tensorflow SavedModel format by default, instead of HDF5. To continue saving to HDF5, add the argument save_format='h5' to the save() function.
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file '.\\MobileFaceNet.py'
 outputting to '.\\MobileFaceNet.py'
--------------------------------------------------------------------------------

40:7: ERROR: Using member tf.contrib.slim in deprecated module tf.contrib. tf.contrib.slim cannot be converted automatically. tf.contrib will not be distributed with TensorFlow 2.0, please consider an alternative in non-contrib TensorFlow, a community-maintained repository such as tensorflow/addons, or fork the required code.
67:9: INFO: `name` passed to `name_scope`. Because you may be re-entering an existing scope, it is not safe to convert automatically,  the v2 name_scope does not support re-entering scopes by name.

67:9: INFO: Renamed 'tf.name_scope' to 'tf.compat.v1.name_scope'
116:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
208:7: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
212:11: INFO: Renamed 'tf.variable_scope' to 'tf.compat.v1.variable_scope'
215:44: INFO: Renamed keyword argument for tf.reduce_mean from keep_dims to keepdims
269:13: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
269:13: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
297:33: INFO: Renamed 'tf.GraphKeys' to 'tf.compat.v1.GraphKeys'
302:17: INFO: Changing tf.contrib.layers xavier initializer to a tf.compat.v1.keras.initializers.VarianceScaling and converting arguments.

303:16: INFO: Multiplying scale arg of tf.contrib.layers.l2_regularizer by half to what tf.keras.regularizers.l2 expects.

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file '.\\mtcnn_model.py'
 outputting to '.\\mtcnn_model.py'
--------------------------------------------------------------------------------

9:13: WARNING: tf.get_variable requires manual check. tf.get_variable returns ResourceVariables by default in 2.0, which have well-defined semantics and are stricter about shapes. You can disable this behavior by passing use_resource=False, or by calling tf.compat.v1.disable_resource_variables().
9:13: INFO: Renamed 'tf.get_variable' to 'tf.compat.v1.get_variable'
9:99: INFO: tf.constant_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
9:99: INFO: Renamed 'tf.constant_initializer' to 'tf.compat.v1.constant_initializer'
29:27: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
34:14: INFO: Changed tf.to_int32 call to tf.cast(..., dtype=tf.int32).
39:12: INFO: Renamed 'tf.log' to 'tf.math.log'
43:17: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
58:17: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
62:32: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
71:17: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
94:17: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
123:17: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
146:11: INFO: Renamed 'tf.where' to 'tf.compat.v1.where'
169:4: INFO: tf.summary.histogram requires manual check. The TF 1.x summary API cannot be automatically migrated to TF 2.0, so symbols have been converted to tf.compat.v1.summary.* and must be migrated manually. Typical usage will only require changes to the summary writing logic, not to individual calls like scalar(). For examples of the new summary API, see the Effective TF 2.0 migration document or check the TF 2.0 TensorBoard tutorials.
169:4: INFO: Renamed 'tf.summary.histogram' to 'tf.compat.v1.summary.histogram'
182:44: INFO: Changing tf.contrib.layers xavier initializer to a tf.compat.v1.keras.initializers.VarianceScaling and converting arguments.

183:43: INFO: tf.zeros_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
183:43: INFO: Renamed 'tf.zeros_initializer' to 'tf.compat.v1.zeros_initializer'
184:44: INFO: Multiplying scale arg of tf.contrib.layers.l2_regularizer by half to what tf.keras.regularizers.l2 expects.

250:44: INFO: Changing tf.contrib.layers xavier initializer to a tf.compat.v1.keras.initializers.VarianceScaling and converting arguments.

251:43: INFO: tf.zeros_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
251:43: INFO: Renamed 'tf.zeros_initializer' to 'tf.compat.v1.zeros_initializer'
252:44: INFO: Multiplying scale arg of tf.contrib.layers.l2_regularizer by half to what tf.keras.regularizers.l2 expects.

292:44: INFO: Changing tf.contrib.layers xavier initializer to a tf.compat.v1.keras.initializers.VarianceScaling and converting arguments.

293:43: INFO: tf.zeros_initializer requires manual check. Initializers no longer have the dtype argument in the constructor or partition_info argument in the __call__ method.
The calls have been converted to compat.v1 for safety (even though they may already have been correct).
293:43: INFO: Renamed 'tf.zeros_initializer' to 'tf.compat.v1.zeros_initializer'
294:44: INFO: Multiplying scale arg of tf.contrib.layers.l2_regularizer by half to what tf.keras.regularizers.l2 expects.

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
Processing file '.\\__init__.py'
 outputting to '.\\__init__.py'
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------

